/**
 * File: MPU_6000_SPI.hp
 * Date: June 15th, 2014
 * Author: Charles Kiorpes
 * 
 * This file contains the basic definitions and register addresses for the MPU 6000 IMU
 **/

#ifndef _MPU_6000_SPI_HP
#define _MPU_6000_SPI_HP

// Some basic constants
#define MPU6000_WORD_SIZE		2	// word size in bytes
#define MPU6000_SPI_SPEED_LOW		1	// 1 MHz	
#define MPU6000_SPI_SPEED_HIGH		20	// 20 MHZ
#define MPU6000_SPI_MODE		3	// SPI mode 3


// register definitions
#define MPU6000_REG_SELF_TEST_X		0x0D
#define MPU6000_REG_SELF_TEST_Y		0x0E
#define MPU6000_REG_SELF_TEST_Z		0x0F
#define MPU6000_REG_SELF_TEST_A		0x10
#define MPU6000_REG_SMPLRT_DIV		0x19	// sample rate divider
#define MPU6000_REG_CFG			0x1A	// configure external sync and low-pass filter Hz

#define MPU6000_REG_GYRO_CFG		0x1B
#define MPU6000_REG_ACCEL_CFG		0x1C
#define MPU6000_REG_MOT_THR		0x1F
#define MPU6000_REG_FIFO_EN		0x23	//configure what data enters FIFO
//I2C config registers not important here
//...
// end I2C config registers
#define MPU6000_REG_INT_PIN_CFG		0x37	// configure interrupt pin behavior
#define MPU6000_REG_INT_ENABLE		0x38	// configure what interrupts mean -> bit0 = data_rdy, bit3 = I2C_MST, bit4 = FIFO overflow, bit6 = MOT_INT
#define MPU6000_REG_INT_STATUS		0x3A	// bit0 = data_rdy, bit3 = I2C_MST, bit4 = FIFO overflow, bit6 = MOT_INT

// sensor data registers - HIGH SPEED
#define MPU6000_REG_ACCEL_XOUT_H	0x3B
#define MPU6000_REG_ACCEL_XOUT_L	0x3C
#define MPU6000_REG_ACCEL_YOUT_H	0x3D
#define MPU6000_REG_ACCEL_YOUT_L	0x3E
#define MPU6000_REG_ACCEL_ZOUT_H	0x3F
#define MPU6000_REG_ACCEL_ZOUT_L	0x40

#define MPU6000_REG_TEMP_OUT_H		0x41
#define MPU6000_REG_TEMP_OUT_L		0x42

#define MPU6000_REG_GYRO_XOUT_H		0x43
#define MPU6000_REG_GYRO_XOUT_L		0x44
#define MPU6000_REG_GYRO_YOUT_H		0x45
#define MPU6000_REG_GYRO_YOUT_L		0x46
#define MPU6000_REG_GYRO_ZOUT_H		0x47
#define MPU6000_REG_GYRO_ZOUT_L		0x48

// External sensor data from MPU6000 - not used
// A few more I2C config registers (for controlling external I2C sensor)

#define MPU6000_REG_SIGNAL_PATH_RESET	0x68
#define MPU6000_REG_MOT_DETECT_CTRL	0x69	// bits 0-5 = ACCEL_ON_DELAY

#define MPU6000_REG_USR_CTRL		0x6A	// bit0 = SIG_COND_RESET, bit1 = I2C_MST_RESET, bit2 = FIFO_RESET
						// bit4 = I2C_IF_DIS,     bit5 = I2C_MST_EN,    bit6 = FIFO_EN

#define MPU6000_REG_PWR_MGMT_1		0x6B	// bits 0-2 = CLKSEL,     bit3 = TEMP_DIS,	bit5 = CYCLE
						// bit6 = SLEEP,	  bit7 = DEVICE_RESET

#define MPU6000_REG_PWR_MGMT_2		0x6C	// bits0-2: gyro standby z,y,x,  bits3-5: accel standby z,y,x
						// bits6-7: LP_WAKE_CTRL

#define MPU6000_REG_FIFO_COUNTH		0x72
#define MPU6000_REG_FIFO_COUNTL		0x73
#define MPU6000_REG_FIFO_R_W		0x74
#define MPU6000_REG_WHOAMI		0x75


#endif
